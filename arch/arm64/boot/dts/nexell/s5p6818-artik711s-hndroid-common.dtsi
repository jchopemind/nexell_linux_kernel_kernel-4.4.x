/*
 * Copyright (C) 2018 Samsung Electronics
 * Author: Chanho Park <chanho61.park@samsung.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/input/input.h>
#include "s5p6818-artik711s.dtsi"

#define PMIC_PDATA_INIT(_id, _rname, _minuv,	\
			_maxuv, _init_uv, _init_enable,		\
			_set_init_uV, _slp_slots)	\
		regulator-name = _rname;		\
		regulator-min-microvolt = <_minuv>;	\
		regulator-max-microvolt = <_maxuv>;	\
		nx,id = <_id>;				\
		nx,init_enable = <_init_enable>;	\
		nx,init_uV = <_init_uv>;		\
		nx,set_init_uV = <_set_init_uV>;	\
		nx,sleep_slots = <_slp_slots>;

/ {
	model = "Samsung artik711s raptor board based on s5p6818";
	compatible = "samsung,artik711s-raptor", "samsung,artik710-raptor",
		   "samsung,artik711s", "samsung,artik710",
		   "nexell,s5p6818";

	aliases {
		i2c5 = &i2c_gpio5;	/* KJW : add i2c_gpio for EP126 */
		i2c6 = &i2c_gpio6;
		i2c7 = &i2c_gpio7;
		/* i2c8 = &i2c_gpio8; KJW : disable */
		/* i2c9 = &i2c_gpio9; YH : disable */
		i2c10 = &i2c_gpio10;
		i2c11 = &i2c_gpio11;
		i2c12 = &i2c_gpio12;
		/*i2c13 = &i2c_gpio13;*/
	};

	nx-v4l2 {
		status = "okay";
	};

	nx-devfreq {
		pll = <0>;
		status = "okay";
	};

	soc {

		clocks {
			sdhc0:sdhc@c00c5000 {
			      clk-input = <(I_PLL2 | I_GATE_PCLK)>;
			};
			sdhc1:sdhc@c00cc000 {
			      clk-input = <(I_PLL2 | I_GATE_PCLK)>;
			};
			sdhc2:sdhc@c00cd000 {
			      clk-input = <(I_PLL2 | I_GATE_PCLK)>;
			};
			timer0:timer@c00b9000 {
			      clk-input = <I_PLL2>;
			};
			timer1:timer@c00bb000 {
			      clk-input = <I_PLL2>;
			};
			pwm0:pwm0@c00ba000 {
			      clk-input = <I_PLL2>;
			};
			vip1:vip@c00c2000 { src-force = <5>; };

			i2s0:i2s@c00b2000 {
				clk-input = <I_PLL2>;
			};
			i2s1:i2s@c00b3000 {
				clk-input = <I_PLL2>;
			};

		};

		rtc@c0010c00 {
			status = "okay";
		};

		timer@c0017000 {
			clocks =  <&timer0>, <&timer1>;
			clock-names = "timer0", "timer1";
		};

		nexell_usbphy: nexell-usbphy@c0012000 {
			status = "okay";
		};

		ohci@c0020000 {
			status = "okay";
			port@0 {
				status = "okay";
			};
		};

		dwc2otg@c0040000 {
			status = "okay";
		};

		gmac0:ethernet@c0060000 {
			pinctrl-names = "default";
			pinctrl-0 = <&gmac_pins>;

			status = "okay";
			#address-cells = <0x1>;
			#size-cells = <0x0>;

			snps,phy-addr = <3>;
			snps,reset-gpio = <&gpio_a 21 0>;
			snps,reset-active-low;
			snps,reset-delays-us = <0 100000 300000>;
			/*snps,reset-delays-us = <0 10000 30000>;*/

			boost-busfreq;
			boost-busfreq-timeout = <100000>;

			mdio {
				#address-cells = <1>;
				#size-cells = <0>;

				ethernet_phy: ethernet-phy@3 {
					reg = <3>;
					fixed-link {
						speed = <1000>;
						full-duplex;
					};
				};
			};
		};

		adc:adc@c0053000 {
			status = "okay";
		};

		watchdog@c0019000 {
			status = "okay";
		};

		pinctrl@C0010000 {
			/*
			key_wakeup0:key_wakeup0 {
				nexell,pins = "alive-1";
				nexell,pin-function = <NX_PIN_FUNC0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <NX_PIN_STR0>;
			};
			*/
			/*
			key_wakeup1:key_wakeup1 {
				nexell,pins = "alive-2";
				nexell,pin-function = <NX_PIN_FUNC0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <NX_PIN_STR0>;
			};
			*/
			
			/* YH : 20180607 repo project sync
			key_doorcall: key_doorcall {
				nexell,pins = "gpioc-26";
				nexell,pin-function = <NX_PIN_FUNC1>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <NX_PIN_STR0>;
			};
			
			key_irdet: key_irdet {
				nexell,pins = "gpioa-15";
				nexell,pin-function = <NX_PIN_FUNC0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <NX_PIN_STR0>;
			};
			*/

			pmic_irq:pmic_irq{
				nexell,pins = "alive-5";
				nexell,pin-function = <NX_PIN_FUNC0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <NX_PIN_STR0>;
			};

			sdmmc2_cclk: sdmmc2-cclk {
				nexell,pin-strength = <NX_PIN_STR3>;
			};

			sdmmc2_cmd: sdmmc2-cmd {
				nexell,pin-strength = <NX_PIN_STR3>;
			};

			sdmmc2_bus4: sdmmc2-bus-width4 {
				nexell,pin-strength = <NX_PIN_STR2>;
			};

			tsp_irq: tsp-irq {
				nexell,pins = "alive-1";
				nexell,pin-function = <NX_PIN_FUNC0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <NX_PIN_STR0>;
			};

			tsp_reset: tsp-reset {
				nexell,pins = "gpioa-25";
				nexell,pin-function = <NX_PIN_FUNC0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <NX_PIN_STR0>;
			};
		};

		spdif_tx: spdiftx@c0059000 {
			#sound-dai-cells = <1>;
			pcm-bit = <16>;
			sample_rate = <48000>;
			status = "okay";
		};

		video-codec@c0080000 {
			status = "okay";
			sram = <0 0>;
		};

		i2s_0:i2s@c0055000 {
			#sound-dai-cells = <1>;
			master-mode = <1>;
			mclk-in = <0>;
			trans-mode = <0>;
			frame-bit = <32>;
			sample-rate = <8000>;	/* YH : 20180607 repo proj sync 16000 -> 8000 */
			pre-supply-mclk = <1>;
			dfs;
			status = "okay";
		};
		
		/* KJW : add */
		i2s_1:i2s@c0056000 {
			#sound-dai-cells = <1>;
			master-mode = <1>;
			mclk-in = <0>;
			trans-mode = <0>;
			frame-bit = <32>;
			sample-rate = <48000>;
			pre-supply-mclk = <1>;
			status = "okay";
		};

		vip_0:vip@c0063000 {
			clk-base = <0xc00c1000>;
			status = "okay";
		};

		vip_1:vip@c0064000 {
			status = "okay";
		};

		/* YH : internal CAM */
		clipper_0:clipper0@c0063000 {
			logical = <0>;
			interface_type = <NX_CAPTURE_INTERFACE_PARALLEL>;
			clock_source = <4>;
			pinctrl-names = "default";
			pinctrl-0 = <&vid0_data_clk &vid0_sync>;
			gpios = <&gpio_a 10 1 &gpio_e 13 1 &gpio_e 12 1>; /*cam_en & cam_rst & door_en*/
			data_order = <NX_VIN_CBY0CRY1>;
			port = <0>;
			external_sync = <1>; /* 601 */
			padclk_sel = <0>;
			h_syncpolarity = <1>; /* HSYNC active high */
			v_syncpolarity = <0>; /* VSYNC active low */
			h_frontporch = <0>;
			h_syncwidth = <0>;
			h_backporch = <0>;
			v_frontporch = <2048>;
			v_syncwidth = <0>;
			v_backporch = <0>;		
			interlace = <0>;
			status = "okay";

			sensor {
				type = <NX_CAPTURE_SENSOR_I2C>;
				i2c_name = "CM130";
				i2c_adapter = <12>;
				addr = <0x20>;
			};
			power {
				enable_seq = <
					NX_ACTION_START NX_ACTION_TYPE_GPIO 2 1 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 0 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 1 0 15 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 1 1 15 NX_ACTION_END
				>;

				disable_seq = <
					NX_ACTION_START NX_ACTION_TYPE_GPIO 1 0 100 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 1 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 2 1 1 NX_ACTION_END
				>;
			};
		};
		/*nvp buffer FR IR cam*/
		clipper_3:clipper3@c0063000 {
			compatible = "nexell,nx-clipper";
			module = <0>;
			logical = <1>;	/* using with clipper0 */
			logical_num = <0>;
			interface_type = <NX_CAPTURE_INTERFACE_PARALLEL>;
			clock_source = <4>;
			gpios = <&gpio_a 10 1 &gpio_e 12 1>; /* cam_en & door_en */
			data_order = <NX_VIN_CBY0CRY1>;
			port = <0>;
			external_sync = <0>;
			interlace = <0>; /* cvbs -> 1 */
			status = "okay";

			sensor {
				type = <NX_CAPTURE_SENSOR_I2C>;
				i2c_name = "NVP6158C";
				i2c_adapter = <11>;
				addr = <0x33>;
				real_addr = <0x32>; /* 0x64>>1 */
			};

			power {
				enable_seq = <
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 1 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 1 0 10 NX_ACTION_END
				>;
				disable_seq = <
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 1 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 1 1 10 NX_ACTION_END
				>;
				/* 
				enable_seq = <
					NX_ACTION_START NX_ACTION_TYPE_GPIO 1 1 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 2 0 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 0 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 1 10 NX_ACTION_END
				>;
				disable_seq = <
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 1 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 1 1 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 2 1 10 NX_ACTION_END
				>;
				*/
			};
		};

		/* FR Color cam */
		clipper_1:clipper1@c0064000 {
			compatible = "nexell,nx-clipper";
			module = <1>;
			logical = <0>;
			interface_type = <NX_CAPTURE_INTERFACE_PARALLEL>;
			pinctrl-names = "default";
			pinctrl-0 = <&vid2_data_clk &vid2_sync>;
			gpios = <&gpio_a 16 1>;	/* reset */
			data_order = <NX_VIN_CBY0CRY1>;
			port = <1>;
			external_sync = <0>;
			interlace = <0>; /* cvbs -> 1 */
			status = "okay";

			sensor {
				type = <NX_CAPTURE_SENSOR_I2C>;
				i2c_name = "NVP6158C";
				i2c_adapter = <11>;
				addr = <0x32>; /* 0x64>>1 */
			};
			power {
				/* control reset */
				enable_seq = <
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 0 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 1 10 NX_ACTION_END
				>;
			};
		};
		clipper_4:clipper4@c0064000 {
			compatible = "nexell,nx-clipper";
			module = <1>;
			logical = <1>;
			logical_num = <0>;
			interface_type = <NX_CAPTURE_INTERFACE_PARALLEL>;
			gpios = <&gpio_a 16 1 &gpio_a 10 1 &gpio_e 12 1>; /* reset & cam_en & door_en*/
			data_order = <NX_VIN_CBY0CRY1>;
			port = <1>;
			external_sync = <0>;
			interlace = <1>; /* cvbs -> 1 */
			status = "okay";

			sensor {
				type = <NX_CAPTURE_SENSOR_I2C>;
				i2c_name = "NVP6158C_VGA";
				i2c_adapter = <11>;
				addr = <0x30>;	/* 0x30:cvbs */
				real_addr = <0x32>; /* 0x64>>1 */
			};
			power {
				enable_seq = <
					NX_ACTION_START NX_ACTION_TYPE_GPIO 1 1 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 2 0 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 0 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 1 10 NX_ACTION_END
				>;
				disable_seq = <
					NX_ACTION_START NX_ACTION_TYPE_GPIO 0 1 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 1 1 10 NX_ACTION_END
					NX_ACTION_START NX_ACTION_TYPE_GPIO 2 1 10 NX_ACTION_END
				>;
			};
		};
		decimator_3:decimator3@c0063000 {
			compatible = "nexell,nx-decimator";
			module = <0>;
			logical = <1>;
			logical_num = <0>;
			status = "okay";
		};
		decimator_4:decimator4@c0064000 {
			compatible = "nexell,nx-decimator";
			module = <1>;
			logical = <1>;
			logical_num = <0>;
			status = "okay";
		};

		scaler@c0066000 {
			status = "okay";
		};
	};	/*** soc ***/

	/* KJW : add misc */
	misc {
		status = "okay";
		compatible = "sds,misc";
		
		ha_reset-gpio = <&gpio_a 13 0>;
		ha_bootsel-gpio = <&gpio_a 14 0>;
		zb_reset-gpio = <&gpio_c 8 0>;
		zb_bootsel-gpio = <&gpio_c 28 0>;
		pcm_select-gpio = <&gpio_a 0 0>;
		door_power_en-gpio = <&gpio_d 8 0>;
		tsp_reset-gpio = <&gpio_d 4 0>;
		zarlink_mode-gpio = <&gpio_a 4 0>;
		zarlink_reset-gpio = <&gpio_a 5 0>;
		power_sw_hold-gpio = <&alive_0 2 0>;

		door_call_det-gpio = <&gpio_c 26 0>;
		door_ir_det-gpio = <&gpio_a 15 0>;

		/*interrupt-parent = <&gpio_c>;
		interrupts = <26 IRQ_TYPE_EDGE_RISING>;
		int-gpio = <&gpio_c 26 0>;

		interrupt-parent = <&gpio_a>;
		interrupts = <15 IRQ_TYPE_EDGE_RISING>;
		int-gpio = <&gpio_a 15 0>;*/
	};
	
	backlight: pwm-backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm 0 20000 0>;
		pwm-names = "pwm-backlight";
		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
				     10 11 12 13 14 15 16 17 18 19
				     20 21 22 23 24 25 26 27 28 29
				     30 31 32 33 34 35 36 37 38 39
				     40 41 42 43 44 45 46 47 48 49
				     50 51 52 53 54 55 56 57 58 59
				     60 61 62 63 64 65 66 67 68 69
				     70 71 72 73 74 75 76 77 78 79
				     80 81 82 83 84 85 86 87 88 89
				     90 91 92 93 94 95 96 97 98 99
				    100>;
		default-brightness-level = <60>;
		status = "okay";
	};

	panel: panel-simple {
		/*compatible = "dongguan,gst7d0038";*/
		compatible = "auo,b125xtn03";
		ddc-i2c-bus = <&i2c_gpio5>;

		/* enable-gpios = <&gpio_a 19 0>; */
		/* reset-gpios = <&gpio_a 3 0>; */
		/* interrupt-parent = <&gpio_c>; */
		/* interrupts = <27 IRQ_TYPE_EDGE_RISING>; */
		/* int-gpio = <&gpio_c 27 0>; */
		backlight-gpios = <&gpio_b 8 0>; /*SKJ 20180501 : backlight on/off */
		
		backlight = <&backlight>;
		status = "okay";

		port {
			lvds_panel: endpoint {
			};
		};
	};

	/* KJW : add i2c_gpio for EP126 */
	i2c_gpio5:i2c@5 {
		compatible = "i2c-gpio";
		gpios = <&gpio_a 17 0 /* sda */
			&gpio_a 6 0 /* scl */
			>;
		/* SKJ 20180501 : set clk (100K) - <100> -> <1> */
		i2c-gpio,delay-us = <1>;
		#address-cells = <1>;
		#size-cells = <0>;
	};

	/* dummy i2c (need to sound driver)*/
	i2c_gpio6:i2c@6 {
		compatible = "i2c-gpio";
		status = "okay";
		/* KJW : remap to dummy gpios */
		gpios = <&gpio_c 15 0
			&gpio_c 16 0
			>;
		/* SKJ 20180501 : set clk (100K) - <10> -> <1> */
		i2c-gpio,delay-us = <1>;
		#address-cells = <1>;
		#size-cells = <0>;
		
		cx2070x: cx2070x@14 {
			#sound-dai-cells = <0>;
			compatible = "conexant,cx2070x";
			reg = <0x14>;
		};
		
		zl38004: zl38004@1a {
			#sound-dai-cells = <0>;
			compatible = "zarlink,zl38004";
			reg = <0x1a>;
		};
	};

	i2c_gpio7:i2c@7 {
		compatible = "i2c-gpio";
		gpios = <&gpio_a 24 0 /* sda */
			&gpio_a 23 0 /* scl */
			>;
		/* SKJ 20180501 : set clk (100K) - <100> -> <1> */
		i2c-gpio,delay-us = <1>;
		#address-cells = <1>;
		#size-cells = <0>;
	};
	
	/* sound { */
	sound0: sound@0 {
		compatible = "nexell,simple-audio-card";
		simple-audio-card,name = "Artik711 raptor Audio0";
		status = "okay";
		
		simple-audio-card,dai-link@0 {
		    format = "i2s";
		    cpu {
				sound-dai = <&i2s_1 0>;
		    };

		    codec {
				sound-dai = <&cx2070x>;
		    };
		};
	};
	
	sound1: sound@1 {
		compatible = "nexell,simple-audio-card";
		simple-audio-card,name = "Artik711 raptor Audio1";
		status = "okay";
		
		simple-audio-card,dai-link@0 {
		    format = "i2s";
		    cpu {
				sound-dai = <&i2s_0 0>;
		    };

		    codec {
				sound-dai = <&zl38004>;
		    };
		};
	};

	
	/*
	sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "Artik710 raptor Audio";
		simple-audio-card,mclk-fs = <256>;
		simple-audio-card,widgets =
		    "Headphone", "Out Jack",
		    "Microphone", "In Jack";
		simple-audio-card,routing =
		    "Out Jack", "HPOL",
		    "Out Jack", "HPOR",
		    "IN2P", "In Jack",
		    "IN2P", "In Jack";
		status = "okay";

		simple-audio-card,dai-link@0 {
		    format = "i2s";
		    cpu {
			sound-dai = <&i2s_0 0>;
		    };

		    codec {
			sound-dai = <&alc5658>;
		    };
		};

		simple-audio-card,dai-link@1 {
		    format = "spdif";
		    cpu {
			sound-dai = <&spdif_tx 0>;
		    };

		    codec {
			sound-dai = <&spdif_out>;
		    };
		};
	};
	*/

	gpio_key: gpio_keys {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;
		pinctrl-names = "default";
		/*pinctrl-0 = <&key_wakeup0>, <&key_wakeup1>;*/
		/*pinctrl-0 = <&key_doorcall>, <&key_irdet>;*/

		power {
			label = "Power";
			gpios = <&alive_0 0 1>;
			linux,code = <KEY_POWER>;
			gpio-key,wakeup;
		};
		
		/*
		doorcall {
			label = "DoorCall";
			gpios = <&gpio_c 26 0>;
			linux,code = <59>;			
			linux,input-type = <0>;
			debounce-interval = <200>;
			gpio-key,wakeup;
		};
		
		irdet {
			label = "IrDet";
			gpios = <&gpio_a 15 0>;
			linux,code = <60>;			
			linux,input-type = <0>;
			debounce-interval = <150>;
			gpio-key,wakeup;
		};
		*/

		/*
		wakeup0 {
			label = "Wakeup";
			gpios = <&alive_0 1 1>;
			linux,code = <KEY_WAKEUP>;
			gpio-key,wakeup;
		};
		*/
		/*
		wakeup1 {
			label = "Wakeup";
			gpios = <&alive_0 2 1>;
			linux,code = <KEY_WAKEUP>;
			gpio-key,wakeup;
		};
		*/
	};

	/* KJW : disable
	spdif_out: spdif-out {
		#sound-dai-cells = <0>;
		compatible = "linux,spdif-dit";
	};
	*/

	/* KJW : disable Battery monitor
	i2c_gpio8: i2c@8 {
		compatible = "i2c-gpio";
		gpios = <&gpio_a 13 0
			&gpio_a 9 0
			>;
		i2c-gpio,delay-us = <1>;
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

		cw2015@62 {
			compatible = "cw201x";
			reg = <0x62>;

			bat_config_info = <0x15 0x4C 0x78 0x48 0x25
				0x16 0x45 0x60 0x67 0x5D
                0x56 0x4C 0x58 0x58 0x53
				0x57 0x59 0x5C 0x5E 0x65
                0x57 0x6C 0x78 0x75 0x85
				0x91 0x07 0xAE 0x74 0xA4
                0x96 0xA3 0xC1 0xC2 0xD2
				0xBF 0x40 0x1F 0x98 0x19
                0x05 0x38 0x48 0x79 0x8D
				0x92 0x92 0x23 0x73 0x80
                0x94 0xB0 0x37 0xC1 0x91
				0xCB 0x2F 0x7D 0x72 0xA5
				0xB5 0xC1 0x15 0x09>;

			is_dc_charge = <1>;
			is_usb_charge = <0>;
		};

	};
	*/
	/*
	i2c_gpio9: i2c@9 {
		compatible = "i2c-gpio";
		gpios = <&gpio_a 19 0	 
			&gpio_a 20 0	 
			>;
		i2c-gpio,delay-us = <1>;	 
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

		bq24296_charger@6b {
			compatible = "ti,bq24296";
			reg = <0x6b>;
			ti,chg_current = <1000 1500 2000>;
		};
	};
	*/
	i2c_gpio10: i2c@10 {
		compatible = "i2c-gpio";
		gpios = <&gpio_e 23 0	/* sda */
			&gpio_e 22 0	/* scl */
			>;

		i2c-gpio,delay-us = <1>;	/* ~100kHz */
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

		nxe2000@32 {
			compatible = "nexell,nxe2000";
			reg = <0x32>;
			interrupt-parent = <&alive_0>;
			interrupts = <0x5 IRQ_TYPE_EDGE_FALLING>;
			pinctrl-names = "default";
			pinctrl-0 = <&pmic_irq>;
		};
	};

	/* YH : for decoder */
	i2c_gpio11: i2c@11 {
		compatible = "i2c-gpio";
		gpios = <&gpio_a 12 0	
			&gpio_a 9 0	
			>;

		i2c-gpio,delay-us = <1>;
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";
	};

	i2c_gpio12: i2c@12 {
		compatible = "i2c-gpio";
		gpios = <&gpio_a 22 0 /* sda */
			&gpio_a 20 0 /* scl */
			>;

		/* SKJ 20180501 : set clk (100K) - <100> -> <1>   */
		i2c-gpio,delay-us = <1>;
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";
	};
	/* YH disable
	i2c_gpio13: i2c@13 {
		compatible = "i2c-gpio";
		gpios = <&gpio_a 0 0	
			&gpio_a 25 0	
			>;

		i2c-gpio,delay-us = <1>;
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";
	};
	*/
	regulators {
		VCC_DCDC0:
			dcdc1	{ PMIC_PDATA_INIT( 0,
				"nxe2000_dcdc1",
				900000, 1500000,
				1100000, 1, 0, 0x4)
				regulator-always-on;
				regulator-boot-on;};
		VCC_DCDC1:
			dcdc2	{ PMIC_PDATA_INIT( 1,
				"nxe2000_dcdc2",
				1000000, 1500000,
				1200000, 1, 0, 0x4)
				regulator-always-on;
				regulator-boot-on;};
		VCC_DCDC2:
			dcdc3	{ PMIC_PDATA_INIT( 2,
				"nxe2000_dcdc3",
				1000000, 3500000,
				3300000, 1, 1, 0xF)
				regulator-always-on;
				regulator-boot-on;};
		VCC_DCDC3:
			dcdc4	{ PMIC_PDATA_INIT( 3,
				"nxe2000_dcdc4",
				1000000, 2000000,
				1500000, 1, 0, 0xF)
				regulator-always-on;
				regulator-boot-on;};
		VCC_DCDC4:
			dcdc5	{ PMIC_PDATA_INIT( 4,
				"nxe2000_dcdc5",
				1000000, 2000000,
				1500000, 1, 0, 0x4)
				regulator-always-on;
				regulator-boot-on;};
		VCC_LDO0:
			ldo1	{ PMIC_PDATA_INIT( 5,
				"nxe2000_ldo1",
				1000000, 3500000,
				3300000, 0, 1, 0x0)
				regulator-boot-on;};
		VCC_LDO1:
			ldo2	{ PMIC_PDATA_INIT( 6,
				"nxe2000_ldo2",
				1000000, 3500000,
				3300000, 0, 1, 0x0)
				regulator-boot-on;};
		VCC_LDO2:
			ldo3	{ PMIC_PDATA_INIT( 7,
				"nxe2000_ldo3",
				1000000, 3500000,
				1800000, 1, 1, 0xF)
				regulator-always-on;
				regulator-boot-on;};
		VCC_LDO3:
			ldo4	{ PMIC_PDATA_INIT( 8,
				"nxe2000_ldo4",
				1000000, 3500000,
				1800000, 1, 1, 0x2)
				regulator-always-on;
				regulator-boot-on;};
		VCC_LDO4:
			ldo5	{ PMIC_PDATA_INIT( 9,
				"nxe2000_ldo5",
				1000000, 3500000,
				3300000, 0, 1, 0x0)
				regulator-boot-on;};
		VCC_LDO5:
			ldo6	{ PMIC_PDATA_INIT(10,
				"nxe2000_ldo6",
				1000000, 3500000,
				3300000, 1, 1, 0xF)
				regulator-always-on;
				regulator-boot-on;};
		VCC_LDO6:
			ldo7	{ PMIC_PDATA_INIT(11,
				"nxe2000_ldo7",
				1000000, 3500000,
				3300000, 1, 1, 0x0)
				regulator-always-on;
				regulator-boot-on;};
		VCC_LDO7:
			ldo8	{ PMIC_PDATA_INIT(12,
				"nxe2000_ldo8",
				1000000, 3500000,
				3300000, 0, 1, 0xF)
				regulator-boot-on;};
		VCC_LDO8:
			ldo9	{ PMIC_PDATA_INIT(13,
				"nxe2000_ldo9",
				1000000, 3500000,
				1800000, 0, 1, 0x2)
				regulator-boot-on;};
		VCC_LDO9:
			ldo10	{ PMIC_PDATA_INIT(14,
				"nxe2000_ldo10",
				1000000, 3500000,
				1200000, 1, 1, 0x4)
				regulator-always-on;
				regulator-boot-on;};
		VCC_RTC0:
			ldortc1	{ PMIC_PDATA_INIT(15,
				"nxe2000_rtc1",
				1700000, 3500000,
				1800000, 1, 1, 0xF)
				regulator-always-on;
				regulator-boot-on;};
		VCC_RTC1:
			ldortc2	{ PMIC_PDATA_INIT(16,
				"nxe2000_rtc2",
				1000000, 3500000,
				1000000, 1, 1, 0xF)
				regulator-always-on;
				regulator-boot-on;};
	}; /* regulators */

	nexell-ion@0 {
		compatible = "nexell,ion";

		heap_sys_user@0 {
			heap-type = "ion_system";
		};

		heap_sys_contig@0 {
			heap-type = "ion_system_contig";
		};

		heap_dma@0 {
			heap-type = "ion_dma";
		};
	};

};

&decimator_0 {
	logical = <0>;
	status = "okay";
};

&decimator_1 {
	logical = <0>;
	status = "okay";
};

&dp_drm {
        status = "okay";
        ports {
                port@0 {
                        reg = <0>;
                        back_color = < 0x0 >;
                        color_key = < 0x0 >;
			plane-names = "video", "primary", "rgb";
		};
                port@1 {
                        reg = <1>;
                        back_color = < 0x0 >;
                        color_key = < 0x0 >;
			plane-names = "video", "primary";
		};
       };
};

&dp_drm_lvds {
	status = "ok";
	/*format = <1>;  JEDIA format */
	format = <0>; /* VESA format */
	remote-endpoint = <&lvds_panel>;

	dp_control {
		clk_src_lv0 = <3>;
		clk_div_lv0 = <10>; /* YH : 16 -> 10*/
		clk_src_lv1 = <7>;
		clk_div_lv1 = <1>;
		out_format = <3>;
	};
};

&dp_drm_tvout {
	status = "ok";
	saturation = <60>;
	pedestal = <1>;

	display-timing {
		clock-frequency = <27000000>;
		hactive = <720>;
		vactive = <480>;
		hfront-porch = <16>;
		hback-porch = <90>;
		hsync-len = <33>;
		vfront-porch = <4>;
		vback-porch = <15>;
		vsync-len = <3>;
		interlaced = <1>;
		vsync-active = <0>;
		hsync-active = <0>;
	};

	dp_control {
		clk_src_lv0 = <4>;
		clk_div_lv0 = <1>;
		clk_delay_lv0 = <0>;
		clk_inv_lv0 = <0>;
		clk_src_lv1 = <7>;
		clk_div_lv1 = <2>;
		clk_delay_lv1 = <0>;
		clk_inv_lv1 = <0>;
		vck_select = <1>;
		out_format = <13>;
	};
};

&dw_mmc_0 {
	num-slots = <1>;
	bus-width = <4>;
	cap-sd-highspeed;
	clock-frequency = <100000000>;
	card-detect-delay = <200>;
	disable-wp;
	cd-gpios = <&gpio_b 16 0>;
	cd-inverted;
	nexell,drive_dly = <0x0>;
	nexell,drive_shift = <0x02>;
	nexell,sample_dly = <0x00>;
	nexell,sample_shift = <0x01>;
	status = "disabled"; /* Patch merge 20180517 */
};

&i2c_0 {
	#address-cells = <1>;
	#size-cells = <0>;
	/* SKJ 20180501 : set clk (400K) */
	samsung,i2c-max-bus-freq = <400000>;
	status = "okay";

#if 1
	/* KJW 20180501 : sis TSP */
	touchscreen@5c {
		compatible = "sis,sis_i2c_ts";
		reg = <0x5c>;
		reset-gpio = <&gpio_a 25 1>;
		backlight-gpio = <&gpio_b 8 0>;
		
		interrupt-parent = <&alive_0>;
		interrupts = <1 IRQ_TYPE_EDGE_FALLING>;
		int-gpio = <&alive_0 1 0>;
		
		pinctrl-names = "default";
		pinctrl-0 = <&tsp_irq &tsp_reset>;
	};
#else
	/* SKJ 20180501 : egalax TSP */
	touchscreen@2a {
		compatible = "eeti,egalax_i2c";
		reg = <0x2a>;
		reset-gpio = <&gpio_a 25 1>;
		
		interrupt-parent = <&alive_0>;
		interrupts = <1 IRQ_TYPE_LEVEL_LOW>;
		int-gpio = <&alive_0 1 0>;
		
		pinctrl-names = "default";
		pinctrl-0 = <&tsp_irq &tsp_reset>;
	};
#endif	
};

/* KJW : add */
&i2c_2 {
	#address-cells = <1>;
	#size-cells = <0>;
	/* SKJ 20180501 : modify clk (100K -> 400K) */
	samsung,i2c-max-bus-freq = <400000>;
	status = "okay";

	cx2070xctl: cx2070xctl@14 {
		/*#sound-dai-cells = <0>;*/
		compatible = "conexant,cx2070xctl";
		reg = <0x14>;
		reset-gpio = <&gpio_d 5 0>;
 	};
};

&serial0 {
	status = "okay";
};

&serial2 {
	status = "okay";
};

&serial3 {
	status = "okay";
};

&serial4 {
	status = "okay";
};

&serial5 {
	status = "okay";
};

&spi0_bus {                                                                     
        nexell,pin-strength = <NX_PIN_STR1>;                                    
};

&spi_0 {
	status = "okay";
	hierarchy = <0>; /* 0:master, 1:slave */
	cs-gpios = <&gpio_c 30 0>;
	spidev@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <25000000>;
		controller-data {
			samsung,spi-feedback-delay = <0>;
		};
	};
};

&spi_2 {
	/*status = "okay";*/
	cs-gpios = <&gpio_c 10 0>;
	spidev@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <25000000>;
		controller-data {
			samsung,spi-feedback-delay = <0>;
		};
	};
};

&pwm {
	status = "okay";
	clocks =  <&pwm0>, <&pwm2>;
	clock-names = "pwm-tclk0", "pwm-tclk1";
	pinctrl-0 = <&pwm0_pin &pwm1_pin>;
	samsung,pwm-outputs = <0>, <1>;
};
